#!/usr/bin/env bash

# What converter and browser should be used? Multiple programs can be specified
# separated by space. The first existing one will be used.
html_converters="mdconv"
browsers="surf firefox"

# Fallback applications in case converting to html and opening in a browser 
# doesn't work:
fallback_applications="bat batcat cat"

function print_help() {
    printf "Usage: mdview <options> filename.md\n\t-v: Verbose\n\t-h: print this help message\n"
}

# Handle input
verbose=1
input_file=${!#}
while getopts 'vh' flag ; do
    case "${flag}" in
        v)
            verbose=0
            ;;
        *)
            print_help
            exit 1
            ;;
    esac
done

# Print help and exit if there is no input file
if [ "$#" -eq 0 ] ; then
    print_help
    exit 1
fi

function log() {
    if [[ $verbose -eq 0 ]] ; then
        echo "$@"
    fi
}

# Convert to html
buffer=""
for converter in $html_converters ; do
    if command -v $converter &> /dev/null ; then
        log Using converter $converter
        case "$converter" in
            # Converters might be called differently
            # Let those be a case in this switch statement
            mdconv)
                buffer=/tmp/$(basename $input_file .md).html
                mdconv -o $buffer $input_file
                break
                ;;
            *)
                ;;
        esac
    else
        log Converter $converter not found
    fi
done

# Open html in browser
if ! [ buffer == "" ] ; then
    for browser in $browsers ; do
        if command -v $browser &> /dev/null ; then
            log Found browser $browser
            $browser $buffer
            exit 0
        else
            log Could not find browser $browser
        fi
    done
    log None of the listed browsers could be found, using fallback application
else
    log Failed to convert to html, using fallback application
fi

# Fallback applications
for application in $fallback_applications; do
    # Try applications in order given by the list
    if command -v $application &> /dev/null ; then
        log Using application $application
        $application $input_file
        exit 0
    else
        log Could not find application $application
    fi
done

log None of the fallback applications could be found. Exiting...
exit 1
